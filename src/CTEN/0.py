import numpy as np

# 示例张量
a = np.array([[5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1],
[0, 7, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[2, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 6, 1, 7, 1, 1, 1, 4, 0, 0, 1, 3, 1],
[1, 3, 1, 4, 1, 5, 5, 6, 1, 1, 4, 1, 1, 1, 1, 1, 1, 5, 5, 1, 2, 1, 1, 4, 4, 4, 1, 1, 1, 1, 1, 1],
[1, 1, 4, 1, 1, 6, 1, 4, 3, 7, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 5, 7, 1, 1, 1, 7, 1, 4, 1],
[2, 2, 2, 5, 2, 2, 2, 2, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 4, 2, 5, 2, 2, 2, 0, 2, 2, 2, 2, 2],
[2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],
[2, 2, 2, 2, 2, 2, 4, 2, 2, 2, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 5, 3, 3, 3, 3, 0, 0, 3, 3, 3, 3],
[3, 3, 3, 3, 3, 0, 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3],
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 5, 3, 0, 3, 4, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3],
[2, 3, 3, 4, 0, 3, 3, 3, 3, 2, 3, 3, 3, 6, 2, 7, 2, 3, 3, 3, 3, 1, 2, 1, 3, 3, 3, 3, 4, 4, 4, 5],
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 4, 4, 4, 3, 4, 4, 6, 1, 4, 4, 4, 4, 6, 4, 4, 6, 4, 4, 4],
[4, 4, 4, 4, 2, 4, 4, 0, 4, 4, 4, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7, 7, 4, 4],
[7, 4, 7, 4, 4, 1, 4, 6, 4, 4, 4, 5, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3],
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4],
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 5, 5, 5, 5, 5, 4, 5, 5],
[5, 5, 5, 5, 5, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 5, 5, 5, 5, 3, 4, 5, 5, 5, 5],
[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 5, 5, 1, 5, 4, 5, 5, 5, 5, 4, 5, 5, 5, 5, 5, 6, 6, 3, 6, 3],
[4, 6, 6, 0, 6, 1, 6, 4, 6, 6, 3, 6, 2, 1, 1, 5, 0, 1, 6, 6, 6, 6, 6, 3, 0, 5, 6, 1, 6, 6, 6, 6],
[6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6],
[6, 6, 6, 2, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 6, 4, 6, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6],
[6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 6, 6, 6, 6, 6, 6, 7, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 1],
[6, 7, 6, 6, 4, 6, 6, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6],
[6, 6, 5, 6, 6, 6, 7, 7, 4, 7, 7, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 7, 7, 7, 0, 7, 7, 7, 7],
[7, 7, 7, 7, 7, 7, 7, 4, 4, 7, 7, 7, 7, 7, 7, 4, 7, 5, 7, 3, 7, 7, 7, 7, 7, 7, 7, 3, 0, 7, 1, 7],
[7, 7, 7, 6, 7, 7, 1, 7, 6, 7, 2, 1, 4, 7, 7, 7, 5, 7, 7, 7, 6, 0, 2, 4, 0, 0, 0, 2, 6, 0, 0, 6],
[0, 7, 0, 3, 5, 0, 4, 1, 0, 1, 7, 2, 1, 3, 1, 1, 4, 4, 6, 3, 1, 5, 2, 1, 7, 3, 4, 1, 3, 2, 2, 2],
[2, 2, 3, 0, 0, 2, 2, 2, 2, 2, 2, 1, 2, 1, 5, 6, 2, 5, 4, 1, 6, 0, 6, 0, 1, 1, 2, 2, 5, 3, 3, 3],
[4, 3, 3, 3, 7, 2, 3, 3, 5, 3, 7, 5, 0, 3, 3, 3, 3, 4, 4, 4, 4, 4, 7, 4, 6, 5, 4, 2, 0, 0, 1, 1],
[1, 4, 4, 4, 4, 1, 2, 4, 4, 3, 0, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 1, 3, 3, 4, 5, 5, 4, 2, 1, 0, 5],
[1, 5, 3, 5, 3, 4, 4, 5, 5, 7, 1, 6, 7, 4, 0, 4, 4, 1, 7, 6, 6, 6, 2, 6, 6, 6, 6, 1, 6, 6, 6, 6],
[6, 6, 6, 3, 6, 6, 2, 6, 6, 6, 7, 6, 6, 0, 6, 6, 5, 0, 6, 7, 4, 4, 7, 7, 0, 0, 6, 6, 1, 6, 7, 5]])
b = np.array([[3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1],
[0, 7, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[2, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 6, 1, 7, 1, 1, 1, 4, 0, 0, 1, 3, 1],
[1, 1, 1, 1, 1, 5, 1, 6, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 5, 1, 2, 1, 1, 4, 4, 4, 1, 1, 1, 1, 1, 1],
[1, 1, 4, 1, 1, 6, 1, 4, 3, 7, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 5, 6, 1, 1, 1, 7, 1, 4, 1],
[2, 2, 2, 5, 2, 2, 2, 2, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 4, 2, 5, 2, 2, 2, 0, 2, 2, 2, 2, 2],
[2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],
[2, 2, 2, 2, 2, 2, 4, 2, 2, 2, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 5, 3, 3, 3, 3, 0, 0, 3, 3, 3, 3],
[3, 3, 3, 3, 3, 0, 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 4, 3],
[3, 7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 0, 3, 4, 3, 7, 3, 4, 3, 3, 3, 0, 3, 3, 3],
[2, 4, 4, 4, 0, 3, 3, 3, 3, 2, 3, 3, 3, 6, 2, 7, 2, 3, 3, 3, 3, 1, 3, 1, 3, 3, 3, 3, 4, 4, 4, 5],
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 4, 4, 4, 3, 4, 4, 6, 4, 4, 4, 4, 4, 6, 4, 4, 6, 4, 4, 4],
[4, 4, 4, 4, 2, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 7, 7, 4, 4],
[7, 4, 7, 4, 4, 1, 4, 6, 4, 4, 4, 5, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3],
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4],
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 5, 2, 5, 1, 5, 4, 5, 5],
[5, 5, 5, 5, 5, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 5, 5, 5, 5, 3, 4, 5, 5, 5, 5],
[5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 5, 5, 1, 5, 4, 3, 5, 5, 5, 4, 5, 5, 5, 5, 5, 6, 6, 3, 6, 3],
[1, 6, 6, 0, 6, 4, 6, 4, 6, 6, 3, 6, 2, 1, 1, 5, 0, 1, 6, 6, 6, 6, 6, 3, 0, 6, 6, 1, 6, 6, 6, 6],
[6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6],
[6, 6, 6, 2, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 6, 4, 6, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6],
[6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 6, 6, 6, 6, 6, 6, 4, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 1],
[6, 7, 6, 6, 4, 6, 6, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6],
[6, 6, 5, 6, 6, 6, 7, 7, 4, 7, 7, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 7, 7, 7, 0, 7, 7, 7, 7],
[7, 7, 7, 7, 7, 7, 7, 4, 4, 7, 7, 7, 7, 7, 7, 4, 7, 5, 7, 3, 7, 7, 7, 7, 7, 7, 7, 3, 0, 7, 1, 7],
[7, 7, 7, 7, 7, 7, 1, 7, 5, 7, 2, 1, 7, 7, 7, 7, 5, 7, 7, 7, 6, 0, 2, 4, 0, 0, 0, 2, 6, 0, 0, 6],
[0, 1, 0, 3, 5, 0, 4, 7, 0, 4, 6, 2, 1, 1, 1, 1, 4, 4, 6, 3, 1, 4, 2, 1, 7, 3, 4, 1, 3, 2, 3, 2],
[2, 2, 3, 0, 0, 2, 2, 2, 2, 3, 2, 1, 2, 1, 5, 6, 2, 2, 4, 1, 0, 0, 6, 0, 1, 1, 2, 2, 4, 3, 4, 3],
[4, 3, 3, 3, 7, 2, 3, 3, 5, 3, 4, 2, 0, 3, 3, 3, 3, 4, 4, 5, 4, 4, 7, 4, 6, 5, 4, 2, 0, 0, 1, 1],
[1, 4, 4, 4, 4, 1, 2, 4, 4, 3, 0, 4, 4, 4, 4, 4, 4, 4, 1, 4, 4, 1, 3, 3, 4, 5, 5, 4, 2, 4, 0, 5],
[4, 5, 3, 5, 3, 4, 4, 5, 7, 7, 1, 4, 7, 4, 0, 4, 4, 1, 7, 6, 6, 6, 2, 6, 6, 6, 6, 1, 6, 6, 6, 6],
[6, 6, 6, 6, 6, 6, 2, 6, 6, 6, 7, 6, 6, 0, 6, 6, 4, 6, 6, 7, 4, 7, 7, 7, 0, 2, 6, 6, 1, 6, 7, 5],
])

# 计算差值
difference = a - b

# 找出非零元素
non_zero_elements = difference != 0

# 统计非零元素的个数
non_zero_count = np.sum(non_zero_elements).item()

print(f"差值中非零元素的个数: {non_zero_count}")
'''
def merge_rows_to_32(input_file, output_file):
    with open(input_file, 'r') as infile, open(output_file, 'w') as outfile:
        buffer = []  # 用于暂存未满 32 个元素的数据
        for line in infile:
            # 将每一行的数据解析为列表
            elements = eval(line.strip())  # 使用 eval 将字符串转为列表
            buffer.extend(elements)       # 将当前行的元素添加到缓冲区
            
            # 如果缓冲区中的元素达到或超过 32 个
            while len(buffer) >= 32:
                # 截取前 32 个元素并写入输出文件
                row = buffer[:32]
                outfile.write(f"{row}\n")
                # 移除已处理的 32 个元素
                buffer = buffer[32:]

        # 如果缓冲区中还有剩余元素（不足 32 个），用 0 填充到 32 个
        if buffer:
            buffer.extend([0] * (32 - len(buffer)))  # 填充 0
            outfile.write(f"{buffer}\n")

# 输入和输出文件路径
input_file = "/home/ubuntu/zzq/CTEN_jittor/outcome3.txt"   # 替换为你的输入文件路径
output_file = "/home/ubuntu/zzq/CTEN_jittor/outcome4.txt" # 替换为你的输出文件路径

# 处理文件
merge_rows_to_32(input_file, output_file)
'''